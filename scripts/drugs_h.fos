#ifndef DRUGS_H
#define DRUGS_H

	// Chem Reliant
	// benefit: Faster recovery from chem side effects
	// penalty: Doubles chance for addiction
	// Chem Resistant
	// benefit: 50% less addiction chance
	// penalty: 50% less duration for Chem effects
	#define DRUG_EFFECT_DIV2_WITHDRAWAL    ( 1 )
	#define DRUG_EFFECT_MUL2_ADDICTION     ( 2 )
	#define DRUG_EFFECT_DIV2_ADDICTION     ( 4 )
	#define DRUG_EFFECT_DIV2_DURATION      ( 8 )
	#define RATE_TO_STAGE                  # (rate)          ( ( rate ) & 0xFFFFFF )
	#define RATE_TO_FLAGS                  # (rate)          ( ( rate ) >> 24 )
	#define FORM_RATE                      # ( stage, flags )( ( ( ( flags ) & 0xFF ) << 24 ) | ( ( stage ) & 0xFFFFFF ) )

	const uint16[] non_stackable_drug = { PID_SOAP_DRUG_CHARISMA };
	
	const int[] DrugsIdentifiers =
	{
		PID_RADAWAY, 
		PID_ANTIDOTE, 
		PID_MENTATS, 
		PID_MENTATS_FRUIT, 
		PID_BUFFOUT, 
		PID_RAD_X, 
		PID_PSYCHO, 
		PID_JET, 
		PID_VOCAS_EXTRACT, 
		PID_FPASLNC, 
		PID_SOAP_DRUG_CHARISMA,
		PID_TREB, 
		PID_VINT, 
		PID_RAD_XL, 
		PID_PEYOTE,
	};

	const int[] DrugEffects =
	{
	// PID_RADAWAY
		ADDICTION_RADAWAY,     		10,     60,     60,   	14160,  4680,
		ST_RADIATION_LEVEL,       -100,   -200,   -200,       	0,     0,
		ST_RADIATION_RESISTANCE,     0,      0,      0,    	  -20,    20,
		-1,         				 0,      0,      0,       	0,     0,
		-1,        					 0,      0,      0,       	0,     0,
	// PID_ANTIDOTE
		-1,     			  		 0,     30,     60,       	0,     0,
		ST_POISONING_LEVEL, 	  -250,   	 0,      0,			0,     0,
		ST_POISON_RESISTANCE, 		50,    -25,    -25,     	0,     0,
		CR_ANTIDOTED,        		 1,      0,     -1,     	0,     0,
		-1,        			 		 0,      0,      0,     	0,     0,
	// PID_MENTATS
		ADDICTION_MENTATS,     		60,    120,    380,      4320,  4680,
		ST_INTELLECT,            	 2,     -4,      2,        -1,     1,
		ST_PERCEPTION,           	 2,     -4,      2,         0,     0,
		-1,        			 		 0,      0,      0,     	0,     0,
		-1,        			 		 0,      0,      0,     	0,     0,
	// PID_MENTATS_FRUIT
		-1,     					60,    120,    250,      4320,  4680,
		ST_INTELLECT,            	 2,     -4,      2,         0,     0,
		-1,        			 		 0,      0,      0,     	0,     0,
		-1,        			 		 0,      0,      0,     	0,     0,
		-1,        			 		 0,      0,      0,     	0,     0,
	// PID_BUFFOUT
		ADDICTION_BUFFOUT,     		60,    120,    380,      4320,  4680,
		ST_STRENGTH,            	 2,     -4,      2,        -2,     2,
		ST_ENDURANCE,           	 3,     -4,      1,        -2,     2,
		-1,        			    	 0,      0,      0,         0,     0,
		-1,        			    	 0,      0,      0,         0,     0,
	// PID_RAD_X
		-1,        					 0,   1440,   1440,     	0,     0,
		ST_RADIATION_RESISTANCE,    30,    -15,    -15,       	0,     0,
		-1,       					 0,      0,      0,        	0,     0,
		-1,        					 0,      0,      0,        	0,     0,
		-1,        					 0,      0,      0,        	0,     0,
	// PID_PSYCHO
		ADDICTION_PSYCHO,    		30,     60,    240,      9600,  4680,
		ST_NORMAL_RESIST,       	10,     -20,    10,         0,     0,
		ST_EXPLODE_RESIST,       	10,     -20,    10,         0,     0,
		ST_FIRE_RESIST,    		 	10,     -20,    10,         0,     0,
		ST_PLASMA_RESIST,        	10,     -20,    10,         0,     0,
	// PID_JET
		ADDICTION_JET,       		80,	   100,   1100,      4000,     2,           // Only after Jet Antidote was used
		ST_ACTION_POINTS,    		25,    -50,     25,         0,     0,
		ST_MELEE_DAMAGE,     		 6,     -6,      0,         0,     0,
		CR_JETTED,     				 1,    	-1,    	 0,         0,     0,
		ST_MAX_LIFE,	     		10,    -30,     20,       -20,    20,
	// PID_VOCAS_EXTRACT
		-1,         			   120,    120,    180,      2400,  6480,
		ST_RADIATION_LEVEL,        -25,    -25,    -25,      	0,     0,
		ST_RADIATION_RESISTANCE,     0,      0,      0,       -20,    20,
		ST_ENDURANCE,  				-2,     -2,      4,       	0,     0,
		-1,        					 0,      0,      0,         0,     0,	
	// PID_FPASLNC
		-1,                   		 0,     30,     30,         0,     0,
		ST_DRUNK,              	   -25,    -20,    -15,         0,     0,
		-1,     				   	 0,    	  0,     0,         0,     0,
		ST_POISONING_LEVEL,   		49,    -20,    -20,         0,     0,
		ST_RADIATION_LEVEL,  	   -50,    -50,    -50,         0,     0,
	// PID_SOAP_DRUG_CHARISMA
		-1,                  		 0,    120,      0,         0,     0,
		ST_CHARISMA,        		 1,     -1,      0,         0,     0,
		-1,                  		 0,      0,      0,         0,     0,
		-1,                  		 0,      0,      0,         0,     0,
		-1,                  		 0,      0,      0,         0,     0,
	// PID_TREB
		ADDICTION_TREB,       		40,	    50,    550,      2000,     2,           // Only after Jet Antidote was used
		ST_ACTION_POINTS,    		 5,    -30,     25,         0,     0,
		ST_MELEE_DAMAGE,     		 3,     -3,      0,         0,     0,
		CR_JETTED,     				 1,    	-1,    	 0,         0,     0,
		ST_MAX_LIFE,	     		 5,    -25,     20,       -15,    15,	
	// PID_VINT
		ADDICTION_VINT,       		20,	    25,    225,      1000,     2,           // Only after Jet Antidote was used
		ST_AGILITY,          		 1,     -2,      1,         0,     0,
		ST_STRENGTH,         		 1,     -2,      1,         0,     0,
		CR_JETTED,     				 1,    	-1,    	 0,         0,     0,
		ST_MAX_LIFE,	     		 0,      0,      0,       -10,    10,
	// PID_RAD_X
		-1,        					 0,   1440,   1440,     	0,     0,
		ST_RADIATION_RESISTANCE,    40,    -20,    -20,       	0,     0,
		ST_DRUNK,      				30,      0,      0,        	0,     0,
		-1,        					 0,      0,      0,        	0,     0,
		-1,        					 0,      0,      0,        	0,     0,
	// PID_PEYOTE
		-1,        					 0,     60,      0,     	0,     0,
		ST_INTELLECT,   			-4,      4,    	 0,       	0,     0,
		ST_POISONING_LEVEL,     	-5,      0,      0,        	0,     0,
		ST_PERCEPTION,  			-1,      1,      0,        	0,     0,
		-1,        					 0,      0,      0,        	0,     0
	};

	// Table offsets
	#define TABLE_DRUG_ADDICT    ( 0 )
	#define TABLE_DRUG_PROC      ( 1 )
	#define TABLE_DURATION       # (stage)      ( 2 + ( stage ) )
	#define TABLE_STAT           # (stat)           ( 6 + ( stat ) * 6 )
	#define TABLE_AMOUNT         # ( stat, stage )( 7 + ( stage ) + ( stat ) * 6 )

	#ifndef DRUGS
		import void UseDrug( Critter& cr, Item& drug ) from "drugs";
		import bool UseDrugOn( Critter& cr, Critter& onCr, Item& drug ) from "drugs";
		import bool SetDrug( Critter& cr, uint16 drugPid ) from "drugs";
		import void DropDrugEffects( Critter& cr ) from "drugs";
		
		import void enlistTimeEvents( Critter& cr, int crId, int p1, int p2 ) from "drugs";
		import void killTimeEvent( Critter& cr, int crId, int index, int id ) from "drugs";
	#endif //DRUGS


#endif // DRUGS_H